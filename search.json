[
  {
    "objectID": "listing.html",
    "href": "listing.html",
    "title": "Slides",
    "section": "",
    "text": "1 Introduction\n\n\nopenstatsware short course: Good Software Engineering Practice for R Packages\n\n\nIntroduction and outline of programPhoto CC0 by Mabel Amber on pexels.com\n\n\n\n\n\nAug 24, 2025\n\n\nAudrey Yeo T. Y.\n\n\n\n\n\n\n\n\n\n\n\n\n2 R packages\n\n\nopenstatsware short course: Good Software Engineering Practice for R Packages\n\n\nR package syntax + practical\n\n\n\n\n\nAug 24, 2025\n\n\nAlessandro Gasparini\n\n\n\n\n\n\n\n\n\n\n\n\n3 Ensuring Quality\n\n\nopenstatsware short course: Good Software Engineering Practice for R Packages\n\n\nPackage quality + practical\n\n\n\n\n\nAug 24, 2025\n\n\nDaniel Sabanés Bové\n\n\n\n\n\n\n\n\n\n\n\n\n4 Version Control and Collaboration\n\n\nopenstatsware short course: Good Software Engineering Practice for R Packages\n\n\nCollaboration via GitHub + practicalPhoto CC0 by THIS IS ZUN on pexels.com\n\n\n\n\n\nAug 24, 2025\n\n\nAlessandro Gasparini\n\n\n\n\n\n\n\n\n\n\n\n\n5 Publication\n\n\nopenstatsware short course: Good Software Engineering Practice for R Packages\n\n\nPublication of R packages + practicalPhoto CC0 by Andrea Piacquadio on pexels.com\n\n\n\n\n\nAug 24, 2025\n\n\nAudrey Yeo T. Y.\n\n\n\n\n\n\n\n\n\n\n\n\n6 Conclusion\n\n\nopenstatsware short course: Good Software Engineering Practice for R Packages\n\n\nDiscussion of learning experience, summary of workflow, conclusion and next stepsPhoto by Ann H on pexels.com\n\n\n\n\n\nAug 24, 2025\n\n\nDaniel Sabanés Bové\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "GSWEP4R Workshop",
    "section": "",
    "text": "Attribution 4.0 International\n=======================================================================\nCreative Commons Corporation (“Creative Commons”) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an “as-is” basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.\nUsing Creative Commons Public Licenses\nCreative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.\n Considerations for licensors: Our public licenses are\n intended for use by those authorized to give the public\n permission to use material in ways otherwise restricted by\n copyright and certain other rights. Our licenses are\n irrevocable. Licensors should read and understand the terms\n and conditions of the license they choose before applying it.\n Licensors should also secure all rights necessary before\n applying our licenses so that the public can reuse the\n material as expected. Licensors should clearly mark any\n material not subject to the license. This includes other CC-\n licensed material, or material used under an exception or\n limitation to copyright. More considerations for licensors:\nwiki.creativecommons.org/Considerations_for_licensors\n\n Considerations for the public: By using one of our public\n licenses, a licensor grants the public permission to use the\n licensed material under specified terms and conditions. If\n the licensor's permission is not necessary for any reason--for\n example, because of any applicable exception or limitation to\n copyright--then that use is not regulated by the license. Our\n licenses grant only permissions under copyright and certain\n other rights that a licensor has authority to grant. Use of\n the licensed material may still be restricted for other\n reasons, including because others have copyright or other\n rights in the material. A licensor may make special requests,\n such as asking that all changes be marked or described.\n Although not required by our licenses, you are encouraged to\n respect those requests where reasonable. More considerations\n for the public: \nwiki.creativecommons.org/Considerations_for_licensees\n=======================================================================\nCreative Commons Attribution 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\n\nreproduce and Share the Licensed Material, in whole or in part; and\nproduce, reproduce, and Share Adapted Material.\n\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)\n\nnever produces Adapted Material.\n\nDownstream recipients.\n\nOffer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nNo downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\n\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\n\nretain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nindicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nindicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\n\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\nIf You Share Adapted Material You produce, the Adapter’s License You apply must not prevent recipients of the Adapted Material from complying with this Public License.\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material; and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS, IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\nTO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES, COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n=======================================================================\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org."
  },
  {
    "objectID": "slides/01_intro.html#disclaimer",
    "href": "slides/01_intro.html#disclaimer",
    "title": "1 Introduction",
    "section": "Disclaimer",
    "text": "Disclaimer\n\nAny opinions expressed in this presentation and on the following slides are solely those of the presenter and not necessarily those of their employers."
  },
  {
    "objectID": "slides/01_intro.html#welcome-to-gswep4r-at-iscb46",
    "href": "slides/01_intro.html#welcome-to-gswep4r-at-iscb46",
    "title": "1 Introduction",
    "section": "Welcome to GSWEP4R at ISCB46!",
    "text": "Welcome to GSWEP4R at ISCB46!\n\n\n\nWe have an open source spirit here. Please sit with someone you do not already know.\n\n\n\nBe Curious. Be Respectful. Be Kind."
  },
  {
    "objectID": "slides/01_intro.html#audrey",
    "href": "slides/01_intro.html#audrey",
    "title": "1 Introduction",
    "section": "Audrey",
    "text": "Audrey\n\n\n\n\n\nM Sci Biostatistics (Zurich), M Nursing (Sydney)\nCurrently : Founder of Finc-Research\nPreviously : Master Thesis in Longitudinal Cluster Analysis, Biostatistician at Roche for 4 years, Paeds / Onc RN from Melbourne, Australia\nLead developer of phase1b package, Bayesian Framework for Clinical Trials and openstatsware member\nEnjoys developing statistical software, especially writing tests\nConnect on"
  },
  {
    "objectID": "slides/01_intro.html#alessandro",
    "href": "slides/01_intro.html#alessandro",
    "title": "1 Introduction",
    "section": "Alessandro",
    "text": "Alessandro\n\n\n\n\n\nPh.D. in Biostatistics from the University of Leicester with a thesis on hierarchical modelling (longitudinal, survival)\nCurrently a biostatistician at Red Door Analytics AB in Stockholm, Sweden since November 2022\nPreviously: post-doc researcher and biostatistician at Karolinska Institutet, Stockholm, Sweden\nMaintainer of multiple R packages on CRAN, contributor to several other, co-chair of the openstatsware working group\nConnect on"
  },
  {
    "objectID": "slides/01_intro.html#daniel",
    "href": "slides/01_intro.html#daniel",
    "title": "1 Introduction",
    "section": "Daniel",
    "text": "Daniel\n\n\n\n\n\nPh.D. in Statistics from University of Zurich, Bayesian Model Selection\nBiostatistician at Roche for 5 years, Data Scientist at Google for 2 years, Statistical Software Engineer at Roche for the last 4 years\nCo-founder of inferential.bio and RCONIS\nMultiple R packages on CRAN and Bioconductor, co-wrote book on Likelihood and Bayesian Inference, chair of openstatsware\nFeel free to connect"
  },
  {
    "objectID": "slides/01_intro.html#openstatsware",
    "href": "slides/01_intro.html#openstatsware",
    "title": "1 Introduction",
    "section": "openstatsware",
    "text": "openstatsware\n\n\n\nopenstatsware.org\nSince: 19 August 2022 - already 3 years now!\nWhere: American Statistical Association (ASA) Biopharmaceutical Section (BIOP), European Federation of Statisticians in the Pharmaceutical Industry (EFSPI)\nWho: Currently more than 60 statisticians from more than 30 organizations\nWhat: Engineer packages and promote best practices"
  },
  {
    "objectID": "slides/01_intro.html#what-you-will-learn-here",
    "href": "slides/01_intro.html#what-you-will-learn-here",
    "title": "1 Introduction",
    "section": "What you will learn here",
    "text": "What you will learn here\n\nUnderstand the basic structure of an R package\nCreate your own R \nLearn about & apply professional  development workflow\nLearn & apply fundamentals of quality control for R \nGet crash-course in version control and modern collaboration techniques on GitHub.com\nLearn how to make an R  available to others"
  },
  {
    "objectID": "slides/01_intro.html#program-outline",
    "href": "slides/01_intro.html#program-outline",
    "title": "1 Introduction",
    "section": "Program outline",
    "text": "Program outline\n\n\n\n\n\n9.00 - 9.15\nIntroduction and outline\n\n\n9.15 - 10.00\nR package syntax\n\n\n10.00 - 10.30\nExercise\n\n\n10.30 - 11.00\nCoffee break\n\n\n11.00 - 11.45\nPackage quality\n\n\n11.45 - 12.30\nExercise\n\n\n12.30 - 13.30\nLunch break\n\n\n13.30 - 14.15\nCollaboration via GitHub\n\n\n14.15 - 15.00\nExercise\n\n\n15.00 - 15.30\nCoffee break\n\n\n15.30 - 16.15\nPublication of R packages\n\n\n16.15 - 16.45\nExercise\n\n\n16.45 - 17.00\nSummary and Q&A"
  },
  {
    "objectID": "slides/01_intro.html#house-keeping",
    "href": "slides/01_intro.html#house-keeping",
    "title": "1 Introduction",
    "section": "House-keeping",
    "text": "House-keeping\n\nCourse website at openstatsware.github.io/shortcourse-iscb2025\n\nall slides\nsources available at github.com/openstatsware/shortcourse-iscb2025\nall materials CC-BY-SA 4.0"
  },
  {
    "objectID": "slides/01_intro.html#what-you-will-need",
    "href": "slides/01_intro.html#what-you-will-need",
    "title": "1 Introduction",
    "section": "What you will need",
    "text": "What you will need\n\nGithub.com (free) account \nLocal R development environment with\n\ngit \nRtools/R/Rstudio IDE \n\nInstall additional R packages using the installation script\nCuriosity 🦝\nPositive attitude 😄"
  },
  {
    "objectID": "slides/01_intro.html#speed-intros-and-what-would-you-like-to-learn",
    "href": "slides/01_intro.html#speed-intros-and-what-would-you-like-to-learn",
    "title": "1 Introduction",
    "section": "Speed intros and what would you like to learn?",
    "text": "Speed intros and what would you like to learn?\n\nName? 🌏\nOrganization? 🏢\nMotivation for this workshop/ what would you like to learn 🧠\nFavorite food? 🍚\nFavorite music? 🎹"
  },
  {
    "objectID": "slides/01_intro.html#what-do-we-mean-by-gswep4r",
    "href": "slides/01_intro.html#what-do-we-mean-by-gswep4r",
    "title": "1 Introduction",
    "section": "What do we mean by GSWEP4R*?",
    "text": "What do we mean by GSWEP4R*?\n\n\nApplying concept of “Good XYZ Practice” to SWE with R\nImprove quality and longevity of R code/packages\nNot a universal standard; we share our perspectives\nCollection of best practices\nDo not reinvent the wheel: learn from the community\n\n\n* Good Software Engineering Practice for R Packages"
  },
  {
    "objectID": "slides/01_intro.html#why-care-about-gswep4r",
    "href": "slides/01_intro.html#why-care-about-gswep4r",
    "title": "1 Introduction",
    "section": "Why care about GSWEP4R?",
    "text": "Why care about GSWEP4R?\n\nR is one of the most successful statistical programming languages\nR is a powerful yet complex ecosystem\n\nCore component: R packages\nMature user & contributor community\nWhere deeper understanding is crucial, even to just assess quality\n\nAnalyses increasingly require complex scripts/programs\nThe concepts are applicable to other languages, too (Python, Julia, etc.)"
  },
  {
    "objectID": "slides/01_intro.html#start-small---from-script-to-package",
    "href": "slides/01_intro.html#start-small---from-script-to-package",
    "title": "1 Introduction",
    "section": "Start small - from script to package",
    "text": "Start small - from script to package\n\nEncapsulate behavior (functions)\nAvoid global state/variables\nAdopt consistent coding style\nDocument well\nAdd test cases\nRefactor and optimize code\nVersion your code\nShare as ‘bundle’\n\nBe aware that starting small is also learning a new set of vocabulary. Engineering terms are active, and specific. We’re here to bring you along!\n\\(\\leadsto\\) R package"
  },
  {
    "objectID": "slides/01_intro.html#the-r-package-ecosystem---huge-success",
    "href": "slides/01_intro.html#the-r-package-ecosystem---huge-success",
    "title": "1 Introduction",
    "section": "The R package ecosystem - huge success",
    "text": "The R package ecosystem - huge success"
  },
  {
    "objectID": "slides/01_intro.html#pharma-perspective-gxp-r",
    "href": "slides/01_intro.html#pharma-perspective-gxp-r",
    "title": "1 Introduction",
    "section": "Pharma perspective: GxP +  R  = ",
    "text": "Pharma perspective: GxP +  R  = \n\nQuality, burden sharing: open-source pharmaverse and openstatsware\nOpen methodological packages can de-risk innovative methods\nR packages make (statistical/methodological) code\n\ntestable (with documented evidence thereof, CFR Part 11)\nreusable\nshareable\neasier to document"
  },
  {
    "objectID": "slides/05_publication.html#disclaimer",
    "href": "slides/05_publication.html#disclaimer",
    "title": "5 Publication",
    "section": "Disclaimer",
    "text": "Disclaimer\n\nAny opinions expressed in this presentation and on the following slides are solely those of the presenter and not necessarily those of their employers."
  },
  {
    "objectID": "slides/05_publication.html#setup-of-pkgdown",
    "href": "slides/05_publication.html#setup-of-pkgdown",
    "title": "5 Publication",
    "section": "Setup of pkgdown",
    "text": "Setup of pkgdown\n\npkgdown makes it quick and easy to build a website for your package\nAfter installing pkgdown, run usethis::use_pkgdown() to get started\nAlternatively, run usethis::use_pkgdown_github_pages()\n\nAdds (and writes) pkgdown.yml, docs folder, and “pkgdown” to .Rbuildignore and docs to gitignore. Also initialises empty branch gh-pages in chosen repo and activates GitHub Pages for repo\n\nMain configuration happens in _pkgdown.yml file\nMany customizations can be applied, but bulk of work during development is updating the reference section with names of .Rd files"
  },
  {
    "objectID": "slides/05_publication.html#example-_pkgdown.yml-file",
    "href": "slides/05_publication.html#example-_pkgdown.yml-file",
    "title": "5 Publication",
    "section": "Example _pkgdown.yml File",
    "text": "Example _pkgdown.yml File\n---\nurl: https://openpharma.github.io/mmrm\n\ntemplate:\n  bootstrap: 5\n  params:\n    ganalytics: UA-125641273-1\n\nnavbar:\n  structure:\n    left: [intro, reference, articles, tutorials, news, reports]\n    right: [search, github]\n  components:\n    reports:\n      text: Reports\n      menu:\n        - text: Coverage report\n          href: coverage-report/\n        - text: Unit test report\n          href: unit-test-report/\n    github:\n      icon: fa-github\n      href: https://github.com/openpharma/mmrm\n\narticles:\n  - title: Introduction\n    navbar: Introduction\n    contents:\n      - introduction\n      - methodological_introduction\n      - mmrm_review_methods\n  - title: Covariance Structures\n    navbar: Covariance Structures\n    contents:\n      - covariance\n  - title: Degrees of Freedom and Testing\n    navbar: Degrees of Freedom and Testing\n    contents:\n      - hypothesis_testing\n      - between_within\n      - kenward\n      - satterthwaite\n  - title: Coefficient Covariance\n    navbar: Coefficient Covariance\n    contents:\n      - coef_vcov\n      - empirical_wls\n  - title: Algorithm Details\n    navbar: Algorithm Details\n    contents:\n      - algorithm\n      - predict\n  - title: Developers\n    navbar: Developers\n    contents:\n      - package_structure\nreference:\n  - title: Package\n    contents:\n      - mmrm-package\n  - title: Functions\n    contents:\n      - mmrm\n      - fit_mmrm\n      - mmrm_control\n      - fit_single_optimizer\n      - refit_multiple_optimizers\n      - df_1d\n      - df_md\n      - component\n  - title: Start Values\n    contents:\n      - std_start\n      - emp_start\n  - title: Methods\n    contents:\n      - mmrm_methods\n      - mmrm_tidiers\n      - mmrm_tmb_methods\n      - stats_anova\n  - title: Covariance Structures\n    contents:\n      - cov_struct\n      - as.cov_struct\n      - format.cov_struct\n      - print.cov_struct\n      - covariance_types\n  - title: Estimate Marginal Means\n    contents:\n      - emmeans_support\n  - title: Datasets\n    contents:\n      - fev_data\n      - bcva_data\n\n---\nSource: the mmrm package documentation"
  },
  {
    "objectID": "slides/05_publication.html#publication-as-github-page",
    "href": "slides/05_publication.html#publication-as-github-page",
    "title": "5 Publication",
    "section": "Publication as GitHub page",
    "text": "Publication as GitHub page\n\nIt’s helpful for users to read the website online\nGitHub is very helpful here because:\n\nA separate branch, gh-pages, stores the rendered website\nGitHub actions automatically render the website when the main branch is updated\n\nTo get started, use usethis::use_pkgdown_github_pages()\n\nOr, manually deploy site with pkgdown::deploy_to_branch()"
  },
  {
    "objectID": "slides/05_publication.html#licensing",
    "href": "slides/05_publication.html#licensing",
    "title": "5 Publication",
    "section": "Licensing",
    "text": "Licensing\n\nHigh level categorization of licenses:\n\n“Permissive”: Relaxed. Can be freely copied, modified, published (under the same license).\n“Copyleft”: Stricter. Same rights need to be preserved in derivative works.\nHelpful tool: https://choosealicense.com/\n\nR itself is licensed under GPL, but packages can choose, e.g.:\n\nusethis::use_mit_license() for permissive MIT\nusethis::use_gpl_license() for copyleft GPL\n\nInclude minimum version, e.g. GPL (&gt;= 3)"
  },
  {
    "objectID": "slides/05_publication.html#licensing-contd",
    "href": "slides/05_publication.html#licensing-contd",
    "title": "5 Publication",
    "section": "Licensing (cont’d)",
    "text": "Licensing (cont’d)\n\nNeed to be careful here when you bundle any code from other software\n\nCare must be taken that any copyright/license statements from copied or modified code are preserved and authorship is not misrepresented\n\nAre the licenses of your package and the source compatible?\n\ne.g. cannot copy/paste code from a GPL package and publish in an MIT package\n\nLICENSE file optionally can contain further restrictions of the license"
  },
  {
    "objectID": "slides/05_publication.html#licensing-contd-1",
    "href": "slides/05_publication.html#licensing-contd-1",
    "title": "5 Publication",
    "section": "Licensing (cont’d)",
    "text": "Licensing (cont’d)\n\nYou don’t have to include a license with your code\nBut: if no license is included, your work is under your exclusive copyright by default\n\nThis means that nobody else can copy, distribute, modify it\nOnce the work has other contributors (each being a copyright holder for their contributions), that nobody starts including you\nThe consequence is that you cannot copy, distribute, modify other people’s contributions to your project\n\nEven if unlicensed code is published in a public repository, as a user, you generally don’t have the permission from the creators of the software to use, modify, or share the software"
  },
  {
    "objectID": "slides/05_publication.html#open-sourcing",
    "href": "slides/05_publication.html#open-sourcing",
    "title": "5 Publication",
    "section": "Open sourcing",
    "text": "Open sourcing\n\nThe easiest way to “open source” your R package is to make the GitHub/code repository public\nThis allows for easy open source contributions from other developers via pull requests\nPlease check with your organization first:\n\nAre they ok to publish the software?\nWhat is the appropriate copyright holder?\n\nAlso allows bugs to be filed and to have the GitHub issues page in the package description"
  },
  {
    "objectID": "slides/05_publication.html#versioning",
    "href": "slides/05_publication.html#versioning",
    "title": "5 Publication",
    "section": "Versioning",
    "text": "Versioning\n\nThe Version field defines the package version\nSyntax: Three integers separated by . or -\n\nCanonical form is: x.y-z, equivalent to x.y.z\n\nUseful conventions of “semantic versioning”:\n\nx is major: Increment this for breaking changes\ny is minor: Increment this for new features\nz is patch: Increment this for bug fixes only\nx.y.z.9000 and count up during development\nusethis::use_version() can help with this"
  },
  {
    "objectID": "slides/05_publication.html#cran-the-comprehensive-r-archive-network",
    "href": "slides/05_publication.html#cran-the-comprehensive-r-archive-network",
    "title": "5 Publication",
    "section": "CRAN (The Comprehensive R Archive Network)",
    "text": "CRAN (The Comprehensive R Archive Network)\n\nCRAN is the central repository for R packages\nIt has additional requirements beyond the standard package ones, which are described in the Repository Policy\nSubmitting a package indicates agreement with the policy\nIn particular: “The time of the volunteers is CRAN’s most precious resource, and they reserve the right to remove or modify packages on CRAN without notice or explanation (although notification will usually be given).”"
  },
  {
    "objectID": "slides/05_publication.html#cran-contd",
    "href": "slides/05_publication.html#cran-contd",
    "title": "5 Publication",
    "section": "CRAN (cont’d)",
    "text": "CRAN (cont’d)\n\nOnly source packages can be submitted \n\nBut .rda data files are allowed\n\nNeed single designated maintainer (person, not mailing list)\n\nAdditional Contact field could be used\n\nCitations in author-year style, followed by &lt;doi:...&gt;\nReducing run time of tests, checks, examples, vignettes is important\nNeed to provide cross-platform portable code: CRAN runs checks on Windows, Mac, and several Linux distributions"
  },
  {
    "objectID": "slides/05_publication.html#cran-contd-1",
    "href": "slides/05_publication.html#cran-contd-1",
    "title": "5 Publication",
    "section": "CRAN (cont’d)",
    "text": "CRAN (cont’d)\n❗ A CRAN submission can be punishing, painful, and nerve-racking:\nThe first release of the rpact package took 5 weeks and 6 submission attempts. Painful experiences:\n\nSome Linux machines may generate different random numbers than expected (despite setting a seed)\nNot only errors and warnings lead to the rejection of a submitted package, but also notes\nYour local Windows test system may be much faster than the CRAN system (e.g., 5 times)\nDon’t use “R Package for” in your package title\nThe description of the package must be provided with a DOI reference"
  },
  {
    "objectID": "slides/05_publication.html#cran-contd-2",
    "href": "slides/05_publication.html#cran-contd-2",
    "title": "5 Publication",
    "section": "CRAN (cont’d)",
    "text": "CRAN (cont’d)\nExample message informing about the rejection of the last rpact submission:\n\nDear maintainer,\npackage rpact_3.3.2.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:\nWindows: 00check.log Status: OK, Debian: 00check.log Status: OK\nPlease fix all problems and resubmit a fixed version via the webform.\nBest regards,\nCRAN teams’ auto-check service\nr-devel-windows-x86_64 Check: Result: NA, Maintainer: ‘Friedrich Pahlke’\nr-devel-windows-x86_64 Check: Overall checktime, Result: NOTE, Overall checktime 12 min &gt; 10 min\nr-devel-linux-x86_64-debian-gcc Check: Result: Note_to_CRAN_maintainers Maintainer: ‘Friedrich Pahlke’"
  },
  {
    "objectID": "slides/05_publication.html#r-hub-to-the-rescue",
    "href": "slides/05_publication.html#r-hub-to-the-rescue",
    "title": "5 Publication",
    "section": "R-Hub to the rescue",
    "text": "R-Hub to the rescue\n\n\n\n\n\nFree R CMD check runs on different operating systems before submitting to CRAN\nSupported by the R consortium\nNew v2 API relies on GitHub actions for checks\nBlog post announcing the transition to the new API: https://blog.r-hub.io/2024/04/11/rhub2/"
  },
  {
    "objectID": "slides/05_publication.html#r-hub-platforms",
    "href": "slides/05_publication.html#r-hub-platforms",
    "title": "5 Publication",
    "section": "R-Hub platforms",
    "text": "R-Hub platforms\n\nlibrary(rhub)\nrhub::rhub_platforms()\n\n── Virtual machines ───────────────────────────────────────────────────────────\n 1 [VM]  linux\n   All R versions on GitHub Actions ubuntu-latest\n 2 [VM]  m1-san\n   All R versions on GitHub Actions macos-15, ASAN + UBSAN on macOS\n 3 [VM]  macos\n   All R versions on GitHub Actions macos-13\n 4 [VM]  macos-arm64\n   All R versions on GitHub Actions macos-latest\n 5 [VM]  windows\n   All R versions on GitHub Actions windows-latest\n\n── Containers ─────────────────────────────────────────────────────────────────\n 6 [CT]  atlas  [ATLAS]\n   R Under development (unstable) (2025-08-23 r88688) on Fedora Linux 38 (Conta…\n   ghcr.io/r-hub/containers/atlas:latest\n 7 [CT]  c23  [C23]\n   R Under development (unstable) (2025-08-22 r88678) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/c23:latest\n 8 [CT]  clang-asan  [asan, clang-ASAN]\n   R Under development (unstable) (2025-08-23 r88688) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/clang-asan:latest\n 9 [CT]  clang-ubsan  [clang-UBSAN, ubsan]\n   R Under development (unstable) (2025-08-23 r88688) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/clang-ubsan:latest\n10 [CT]  clang16  [clang16]\n   R Under development (unstable) (2025-08-23 r88688) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/clang16:latest\n11 [CT]  clang17  [clang17]\n   R Under development (unstable) (2025-08-22 r88678) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/clang17:latest\n12 [CT]  clang18  [clang18]\n   R Under development (unstable) (2025-08-23 r88688) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/clang18:latest\n13 [CT]  clang19  [clang19]\n   R Under development (unstable) (2025-08-22 r88678) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/clang19:latest\n14 [CT]  clang20  [clang20]\n   R Under development (unstable) (2025-06-03 r88266) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/clang20:latest\n15 [CT]  donttest  [donttest]\n   R Under development (unstable) (2025-08-22 r88678) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/donttest:latest\n16 [CT]  gcc-asan  [gcc-ASAN, gcc-UBSAN]\n   R Under development (unstable) (2025-08-23 r88688) on Fedora Linux 40 (Conta…\n   ghcr.io/r-hub/containers/gcc-asan:latest\n17 [CT]  gcc13  [gcc13]\n   R Under development (unstable) (2025-08-23 r88688) on Fedora Linux 38 (Conta…\n   ghcr.io/r-hub/containers/gcc13:latest\n18 [CT]  gcc14  [gcc14]\n   R Under development (unstable) (2025-08-23 r88688) on Fedora Linux 40 (Conta…\n   ghcr.io/r-hub/containers/gcc14:latest\n19 [CT]  gcc15  [gcc15]\n   R Under development (unstable) (2025-08-23 r88688) on Fedora Linux 42 (Conta…\n   ghcr.io/r-hub/containers/gcc15:latest\n20 [CT]  intel  [Intel]\n   R Under development (unstable) (2025-08-23 r88688) on Fedora Linux 38 (Conta…\n   ghcr.io/r-hub/containers/intel:latest\n21 [CT]  mkl  [MKL]\n   R Under development (unstable) (2025-08-23 r88688) on Fedora Linux 38 (Conta…\n   ghcr.io/r-hub/containers/mkl:latest\n22 [CT]  nold  [noLD]\n   R Under development (unstable) (2025-08-23 r88688) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/nold:latest\n23 [CT]  noremap  [noRemap]\n   R Under development (unstable) (2025-08-22 r88678) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/noremap:latest\n24 [CT]  nosuggests  [noSuggests]\n   R Under development (unstable) (2025-08-23 r88688) on Fedora Linux 38 (Conta…\n   ghcr.io/r-hub/containers/nosuggests:latest\n25 [CT]  rchk  [rchk]\n   R Under development (unstable) (2025-08-23 r88688) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/rchk:latest\n26 [CT]  ubuntu-clang  [r-devel-linux-x86_64-debian-clang]\n   R Under development (unstable) (2025-08-23 r88688) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/ubuntu-clang:latest\n27 [CT]  ubuntu-gcc12  [r-devel-linux-x86_64-debian-gcc]\n   R Under development (unstable) (2025-08-23 r88688) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/ubuntu-gcc12:latest\n28 [CT]  ubuntu-next  [r-next, r-patched, r-patched-linux-x86_64]\n   R version 4.5.1 Patched (2025-08-23 r88688) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/ubuntu-next:latest\n29 [CT]  ubuntu-release  [r-release, r-release-linux-x86_64, ubuntu]\n   R version 4.5.1 (2025-06-13) on Ubuntu 22.04.5 LTS\n   ghcr.io/r-hub/containers/ubuntu-release:latest\n30 [CT]  valgrind  [valgrind]\n   R Under development (unstable) (2025-08-23 r88688) on Fedora Linux 38 (Conta…\n   ghcr.io/r-hub/containers/valgrind:latest"
  },
  {
    "objectID": "slides/05_publication.html#github-actions",
    "href": "slides/05_publication.html#github-actions",
    "title": "5 Publication",
    "section": "GitHub actions",
    "text": "GitHub actions\n\nIt is also possible to use GitHub Actions to run R CMD check\nFree for public repositories, paid service for private repositories\nChecks will be run every time someone pushes a commit to a repository hosted on GitHub\nEasy setup from your R console: usethis::use_github_action_check_standard()\n\nThis runs a standard R CMD check on three major operating systems\n\nScript and documentation are developed and maintained by the r-lib organization here"
  },
  {
    "objectID": "slides/05_publication.html#tags",
    "href": "slides/05_publication.html#tags",
    "title": "5 Publication",
    "section": "Tags",
    "text": "Tags\n\nTags are a feature of Git, i.e., not specific to GitHub\nGit can tag (or “bookmark”) specific points in the code history as being important\nTypically, for each release, create a tag vx.y.z (MAJOR.Minor.patch format)\nThe value here is that users can later check out the package in the state of this release version\n\nDownload in R: remotes::install_github(\"org/package\", ref = \"vx.y.z\")\nComparison of versions are also possible, etc."
  },
  {
    "objectID": "slides/05_publication.html#tags-example",
    "href": "slides/05_publication.html#tags-example",
    "title": "5 Publication",
    "section": "Tags: example",
    "text": "Tags: example"
  },
  {
    "objectID": "slides/05_publication.html#releases",
    "href": "slides/05_publication.html#releases",
    "title": "5 Publication",
    "section": "Releases",
    "text": "Releases\n\nReleases are based on Git tags, and a feature of GitHub\nAre “deployable software packages to make them available for a wider audience to download and use”\nContain release notes and links to the binary package files for download\n\nHowever, for R packages these tar.gz package files are rarely used directly"
  },
  {
    "objectID": "slides/05_publication.html#releases-example",
    "href": "slides/05_publication.html#releases-example",
    "title": "5 Publication",
    "section": "Releases: example",
    "text": "Releases: example"
  },
  {
    "objectID": "slides/05_publication.html#a-note-on-bioconductor",
    "href": "slides/05_publication.html#a-note-on-bioconductor",
    "title": "5 Publication",
    "section": "A Note on Bioconductor",
    "text": "A Note on Bioconductor\n\nThe Bioconductor project develops, supports, and disseminates open source software for the analysis of biological assays\nLike CRAN, Bioconductor has additional package requirements: one can only submit either to CRAN or Bioconductor\nPackages are peer reviewed by community members\nNew packages and updates to existing packages are released semi-annually\nSoftware is expected to be interoperable with other Bioconductor packages through the re-use of common data structures and infrastructure"
  },
  {
    "objectID": "slides/05_publication.html#quick-quiz-one-correct-answer-only",
    "href": "slides/05_publication.html#quick-quiz-one-correct-answer-only",
    "title": "5 Publication",
    "section": "Quick quiz (one correct answer only)",
    "text": "Quick quiz (one correct answer only)\n\n\n\nI am cloning / forking a repo that has an MIT license. Which license shall I use if I want to make modification and distribute my new package?\n\n\n\n\n\nMIT license\nAny license\nNo license because that assumes transfer of my rights from the original repo’s MIT license\n\n\n\n\n\nI want to build a website for my package. Which file can I mainly configure my website in?\n\n\n\n\n\n\n_pkgdown.yml file\n.gitignore\nAny .Rd file"
  },
  {
    "objectID": "slides/05_publication.html#quick-quiz-solution",
    "href": "slides/05_publication.html#quick-quiz-solution",
    "title": "5 Publication",
    "section": "Quick quiz (solution)",
    "text": "Quick quiz (solution)\n\n\n\nI am cloning / forking a repo that has an MIT license. Which license shall I use if I want to make modification and distribute my new package?\n\n\n\n\n\nMIT license\nAny license\nNo license because that assumes transfer of my rights from the original repo’s MIT license\n\n\n\n\n\nI want to build a website for my package. Which file can I mainly configure my website in?\n\n\n\n\n\n\n_pkgdown.yml file\n.gitignore\nAny .Rd file"
  },
  {
    "objectID": "slides/02_r_packages.html#disclaimer",
    "href": "slides/02_r_packages.html#disclaimer",
    "title": "2 R packages",
    "section": "Disclaimer",
    "text": "Disclaimer\n\nAny opinions expressed in this presentation and on the following slides are solely those of the presenter and not necessarily those of their employers."
  },
  {
    "objectID": "slides/02_r_packages.html#what-you-know-already",
    "href": "slides/02_r_packages.html#what-you-know-already",
    "title": "2 R packages",
    "section": "What you know already",
    "text": "What you know already\n\nPackages provide a mechanism for loading optional code, data, and documentation\nA library is a directory into which packages are installed\ninstall.packages() is used to install packages into the library\nlibrary() is used to load and attach packages from the library\n\n“Attach” means that the package is put in your search list — objects in the package can be used directly\n\nRemember that package \\(\\neq\\) library"
  },
  {
    "objectID": "slides/02_r_packages.html#what-we-want-to-talk-about-now",
    "href": "slides/02_r_packages.html#what-we-want-to-talk-about-now",
    "title": "2 R packages",
    "section": "What we want to talk about now",
    "text": "What we want to talk about now\n\nHow to write, build, test, and check your own package 😊\nHow to do this in a methodical and sustainable way\nGive tips and tricks based on practical experience"
  },
  {
    "objectID": "slides/02_r_packages.html#how-is-a-package-structured",
    "href": "slides/02_r_packages.html#how-is-a-package-structured",
    "title": "2 R packages",
    "section": "How is a package structured?",
    "text": "How is a package structured?\nPackage source = directory with files and subdirectories\n\n\n\nMandatory:\n\nDESCRIPTION\nNAMESPACE\nR\nman\n\n\n\n\nTypically also includes:\n\ndata\ninst\nsrc\ntests\nvignettes\nNEWS"
  },
  {
    "objectID": "slides/02_r_packages.html#how-to-get-started-quickly",
    "href": "slides/02_r_packages.html#how-to-get-started-quickly",
    "title": "2 R packages",
    "section": "How to get started quickly",
    "text": "How to get started quickly\nOnce upon a time, developers would set up this structure manually 🥱\nNowadays, it’s super fast with:\n\nusethis::create_package()\nRStudio &gt; File &gt; New Project &gt; New Directory &gt; R Package"
  },
  {
    "objectID": "slides/02_r_packages.html#description-file",
    "href": "slides/02_r_packages.html#description-file",
    "title": "2 R packages",
    "section": "DESCRIPTION file",
    "text": "DESCRIPTION file\n\nPackage: Choose the name of your package\n\nNot unimportant!\nCheck CRAN to see if your name is available\n\nTitle: Add a Title for Your Package (Title Case)\nVersion: Start with a low package version\n\nMajor.Minor.Patch syntax (Semantic Versioning)\n\nAuthors@R: Add authors and maintainer\nDescription: Like an abstract, including references"
  },
  {
    "objectID": "slides/02_r_packages.html#description-file-contd",
    "href": "slides/02_r_packages.html#description-file-contd",
    "title": "2 R packages",
    "section": "DESCRIPTION file (cont’d)",
    "text": "DESCRIPTION file (cont’d)\n\nLicense: Important for open sourcing\n\nConsider permissive licenses such as Apache and MIT\n\nDepends:\n\nWhich R version users need to have at a minimum\nIdeally don’t put any package here\nPackages will be loaded and attached upon library your package\n\nImports: Packages which you import functions, methods, classes from\nSuggests: Packages for documentation processing (roxygen2), running examples, tests (testthat), vignettes"
  },
  {
    "objectID": "slides/02_r_packages.html#r-folder",
    "href": "slides/02_r_packages.html#r-folder",
    "title": "2 R packages",
    "section": "R folder",
    "text": "R folder\n\nOnly contains R code files (recommended to use .R suffix)\n\nCan create a file with usethis::use_r(\"filename\")\n\nAssigns R objects, i.e. mostly functions, but could also be constant variables, data sets, etc.\nShould not have any side effects, i.e. avoid require(), options() etc.\nIf certain code needs to be sourced first, use on top of file (which will update the Collate field of DESCRIPTION automatically)\n\n\n#' @include dependency.R\nNULL"
  },
  {
    "objectID": "slides/02_r_packages.html#namespace-file",
    "href": "slides/02_r_packages.html#namespace-file",
    "title": "2 R packages",
    "section": "NAMESPACE file",
    "text": "NAMESPACE file\n\n# Generated by roxygen2: do not edit by hand\n\nexport(package_used_first)\nexport(package_used_second)\nexport(package_used_third)\n\n\nDefines the namespace of the package, to work with R’s namespace management system\nNamespace directives in this file allow to specify:\n\nWhich objects are exported to users and other packages\nWhich are imported from other packages"
  },
  {
    "objectID": "slides/02_r_packages.html#namespace-file-contd",
    "href": "slides/02_r_packages.html#namespace-file-contd",
    "title": "2 R packages",
    "section": "NAMESPACE file (cont’d)",
    "text": "NAMESPACE file (cont’d)\n\nControls the search strategy for variables:\n\nLocal (in the function body etc.)\nPackage namespace\nImports\nBase namespace\nNormal search() path"
  },
  {
    "objectID": "slides/02_r_packages.html#man-folder",
    "href": "slides/02_r_packages.html#man-folder",
    "title": "2 R packages",
    "section": "man folder",
    "text": "man folder\n\nContains documentation files for the objects in the package in the .Rd format\n\nThe syntax is a bit similar to LaTeX\n\nAll user level objects should be documented\nInternal objects don’t need to be documented — but I recommend it!\nOnce upon a time, developers would set up these .Rd files and the NAMESPACE manually 🥱\nFortunately, nowadays we have roxygen2! 🚀"
  },
  {
    "objectID": "slides/02_r_packages.html#roxygen2-to-the-rescue",
    "href": "slides/02_r_packages.html#roxygen2-to-the-rescue",
    "title": "2 R packages",
    "section": "roxygen2 to the rescue!",
    "text": "roxygen2 to the rescue!\n\nWe can include the documentation source directly in the R script on top of the objects we are documenting\nSyntax is composed of special comments #' and special macros preceded with @\nIn RStudio, running Build &gt; More &gt; Document will render the .Rd files and the NAMESPACE file for you\nGet started with usethis::use_roxygen_md()\nPlacing your cursor inside a function in RStudio, create a roxygen2 skeleton with Code &gt; Insert Roxygen Skeleton"
  },
  {
    "objectID": "slides/02_r_packages.html#setting-up-roxygen2-in-your-project",
    "href": "slides/02_r_packages.html#setting-up-roxygen2-in-your-project",
    "title": "2 R packages",
    "section": "Setting up roxygen2 in your project",
    "text": "Setting up roxygen2 in your project"
  },
  {
    "objectID": "slides/02_r_packages.html#roxygen2-source",
    "href": "slides/02_r_packages.html#roxygen2-source",
    "title": "2 R packages",
    "section": "roxygen2 source",
    "text": "roxygen2 source\nR/my_sum.R:\n\n#' My Summation Function\n#'\n#' This is my first function and it sums two numbers.\n#'\n#' @param x first summand.\n#' @param y second summand.\n#'\n#' @return The sum of `x` and `y`.\n#' @export\n#'\n#' @note This function is a bit boring but that is ok.\n#' @seealso [Arithmetic] for an easier way.\n#'\n#' @examples\n#' my_sum(1, 2)\nmy_sum &lt;- function(x, y) {\n    x + y\n}"
  },
  {
    "objectID": "slides/02_r_packages.html#roxygen2-output",
    "href": "slides/02_r_packages.html#roxygen2-output",
    "title": "2 R packages",
    "section": "roxygen2 output",
    "text": "roxygen2 output\nman/my_sum.Rd:\n% Generated by roxygen2: do not edit by hand\n% Please edit documentation in R/my_sum.R\n\\name{my_sum}\n\\alias{my_sum}\n\\title{My Summation Function}\n\\usage{\nmy_sum(x, y)\n}\n\\arguments{\n\\item{x}{first summand.}\n\n\\item{y}{second summand.}\n}\n\\value{\nThe sum of \\code{x} and \\code{y}.\n}\n\\description{\nThis is my first function and it sums two numbers.\n}\n\\note{\nThis function is a bit boring but that is ok.\n}\n\\examples{\nmy_sum(1, 2)\n}\n\\seealso{\n\\link{Arithmetic} for an easier way.\n}"
  },
  {
    "objectID": "slides/02_r_packages.html#roxygen2-output-contd",
    "href": "slides/02_r_packages.html#roxygen2-output-contd",
    "title": "2 R packages",
    "section": "roxygen2 output (cont’d)",
    "text": "roxygen2 output (cont’d)\nNAMESPACE:\n# Generated by roxygen2: do not edit by hand\n\nexport(my_sum)"
  },
  {
    "objectID": "slides/02_r_packages.html#tests-folder",
    "href": "slides/02_r_packages.html#tests-folder",
    "title": "2 R packages",
    "section": "tests folder",
    "text": "tests folder\n\nWhere store the unit tests covering the functionality of the package\nGet started with usethis::use_testthat() and usethis::use_test() and populate tests/testthat folder with unit tests\nRarely, tests cannot be run within testthat framework, then these can go into R scripts directly in tests directory\nWe will look at unit tests in detail later"
  },
  {
    "objectID": "slides/02_r_packages.html#data-folder",
    "href": "slides/02_r_packages.html#data-folder",
    "title": "2 R packages",
    "section": "data folder",
    "text": "data folder\n\nFor (example) data that you ship in your package to the user\n\nGet started with usethis::use_data()\nNote: Usually we use lazy data loading, therefore no data() call needed before using the data\n\nIf you generate the example data, save the R script, too\n\nPut that into data-raw folder, start with usethis::use_data_raw()"
  },
  {
    "objectID": "slides/02_r_packages.html#inst-folder",
    "href": "slides/02_r_packages.html#inst-folder",
    "title": "2 R packages",
    "section": "inst folder",
    "text": "inst folder\n\nContents will be copied recursively to installation directory\n\nBe careful not to interfere with standard folder names\n\nFor data that is used by functions in the package itself\n\nThose would typically go into inst/extdata folder\nLoad with system.file(\"path/file\", package = \"mypackage\")\n\nCITATION: For custom citation() output\n\nCreate it with usethis::use_citation()\n\ninst/doc can contain documentation files (typically pdf)"
  },
  {
    "objectID": "slides/02_r_packages.html#src-folder",
    "href": "slides/02_r_packages.html#src-folder",
    "title": "2 R packages",
    "section": "src folder",
    "text": "src folder\n\nContains sources and headers for any code that needs compilation\nShould only contain a single language here\n\nBecause R uses it, mixing C, C++ and Fortran usually works with OS native compilers\n\nMuch more complex to write and maintain than an R only package\nTypically only makes sense for\n\nWrapping existing libraries for use in R\nSpeeding up complex or long computations"
  },
  {
    "objectID": "slides/02_r_packages.html#vignettes-folder",
    "href": "slides/02_r_packages.html#vignettes-folder",
    "title": "2 R packages",
    "section": "vignettes folder",
    "text": "vignettes folder\n\nSpecial case of documentation files (pdf or html) created by compiling source files\nPackage users don’t need to recompile the vignettes - they are delivered with the package\nStart a new vignette with usethis::use_vignette()\n\nStarts an Rmd vignette, compiled with knitr\n\nImportant for the user to understand the high-level ideas\nComplements function-level documentation from our roxygen2 chunks"
  },
  {
    "objectID": "slides/02_r_packages.html#news-file",
    "href": "slides/02_r_packages.html#news-file",
    "title": "2 R packages",
    "section": "NEWS file",
    "text": "NEWS file\n\nLists user-visible changes worth mentioning\nIn each new release, add items at the top under the version they refer to\nDon’t discard old items: leave them in the file after the newer items\nStart one with usethis::use_news_md()"
  },
  {
    "objectID": "slides/02_r_packages.html#licensing-1",
    "href": "slides/02_r_packages.html#licensing-1",
    "title": "2 R packages",
    "section": "Licensing",
    "text": "Licensing\n\nWe mentioned before that licensing information is usually included in the DESCRIPTION file\nIn fact, the License field (in standardized form) is mandatory\nLicensing for a package which might be distributed is an important but potentially complex subject\nIt is very important to include licensing information, as otherwise:\n\nIt may not be possible to use it\nIt may not be possible to distribute copies of it\n\nWe are going to talk more about licensing in Chapter 5 later today"
  },
  {
    "objectID": "slides/02_r_packages.html#license-options",
    "href": "slides/02_r_packages.html#license-options",
    "title": "2 R packages",
    "section": "License options",
    "text": "License options\n\nCommon licenses for R packages: GPL-2, GPL-3, AGPL-3, MIT, …\nDetails and description of most licenses are available online:\n\nhttps://www.r-project.org/Licenses\nhttps://choosealicense.com\nhttps://cran.r-project.org/doc/manuals/R-exts.html#Licensing\n\nExamples of standardized license specifications:\n\nLicense: GPL-2\nLicense: LGPL (&gt;= 2.0, &lt; 3) | Mozilla Public License\nLicense: GPL-2 | file LICENCE\nLicense: Artistic-2.0 | AGPL-3 + file LICENSE\n\nThe optional file LICENSE/LICENCE contains a copy of the license\n\nOnly include such a file if it is referred to in the License field"
  },
  {
    "objectID": "slides/02_r_packages.html#adding-a-license-to-your-package",
    "href": "slides/02_r_packages.html#adding-a-license-to-your-package",
    "title": "2 R packages",
    "section": "Adding a license to your package",
    "text": "Adding a license to your package\n\nOnce again, functions from the usethis package simplify this process:\n\nusethis::use_mit_license()\nusethis::use_gpl_license()\nusethis::use_agpl_license()\nusethis::use_lgpl_license()\nusethis::use_apache_license()\nusethis::use_cc0_license()\nusethis::use_ccby_license()\nusethis::use_proprietary_license()"
  },
  {
    "objectID": "slides/02_r_packages.html#documenting-the-package",
    "href": "slides/02_r_packages.html#documenting-the-package",
    "title": "2 R packages",
    "section": "Documenting the package",
    "text": "Documenting the package\n\nThe first step is to produce the documentation files and NAMESPACE\nIn RStudio: Build &gt; More &gt; Document\nIn the console: devtools::document()"
  },
  {
    "objectID": "slides/02_r_packages.html#checking-the-package",
    "href": "slides/02_r_packages.html#checking-the-package",
    "title": "2 R packages",
    "section": "Checking the package",
    "text": "Checking the package\n\nR comes with pre-defined check command for packages: “the R package checker” aka R CMD check\nAbout 22 checks are run (so quite a lot), including things like:\n\nCan the package be installed?\nIs the code syntax ok?\nIs the documentation complete?\nDo tests run successfully?\nDo examples run successfully?\n\nIn RStudio: Build &gt; Check\nIn the console: devtools::check()"
  },
  {
    "objectID": "slides/02_r_packages.html#building-the-package-1",
    "href": "slides/02_r_packages.html#building-the-package-1",
    "title": "2 R packages",
    "section": "Building the package",
    "text": "Building the package\n\nThe R package folder can be compressed into a single package file\nTypically we manually only build “source” package\n\nIn RStudio: Build &gt; More &gt; Build Source Package\nIn the console: devtools::build()\n\nMakes it easy to share the package with others and submit to CRAN"
  },
  {
    "objectID": "slides/02_r_packages.html#installing-the-package",
    "href": "slides/02_r_packages.html#installing-the-package",
    "title": "2 R packages",
    "section": "Installing the package",
    "text": "Installing the package\n\nR comes with pre-defined install command for packages: R CMD INSTALL\nIn RStudio: Build &gt; Install\nIn the console: devtools::install()\nNote: During development it’s usually sufficient to use Build &gt; More &gt; Load All\n\nRuns devtools::load_all()\nRoughly simulates what happens when package would be installed and loaded\nUnexported objects and helpers under tests will also be available\nKey: much faster!"
  },
  {
    "objectID": "slides/02_r_packages.html#keyboard-shortcuts",
    "href": "slides/02_r_packages.html#keyboard-shortcuts",
    "title": "2 R packages",
    "section": "Keyboard shortcuts",
    "text": "Keyboard shortcuts\n\nLearning some of the RStudio keyboard shortcuts can speed up many of the tasks we introduced in this lecture:\n\n\n\n\n\n\nDescription\nWindows & Linux\nMac\n\n\n\n\nInstall and Restart\nCtrl+Shift+B\nShift+Command+B\n\n\nLoad All\nCtrl+Shift+L\nShift+Command+L\n\n\nTest Package\nCtrl+Shift+T\nShift+Command+T\n\n\nCheck Package\nCtrl+Shift+E\nShift+Command+E\n\n\nDocument Package\nCtrl+Shift+D\nShift+Command+D\n\n\n\n\n\n\nThere are many more – check for instance the RStudio IDE Documentation"
  },
  {
    "objectID": "slides/02_r_packages.html#lets-try-this-out-now",
    "href": "slides/02_r_packages.html#lets-try-this-out-now",
    "title": "2 R packages",
    "section": "Let’s try this out now 😊",
    "text": "Let’s try this out now 😊\n\nSet up a new R package with a fancy name\nFill out the DESCRIPTION file\nInclude a few functions\nAdd roxygen2 documentation\nPick and add a license to the package\nExport the function to the namespace\nProduce the package documentation\nRun checks\nBuild the package\n\n\\(\\leadsto\\) We will be using this package throughout the day!"
  },
  {
    "objectID": "slides/04_collaboration.html#disclaimer",
    "href": "slides/04_collaboration.html#disclaimer",
    "title": "4 Version Control and Collaboration",
    "section": "Disclaimer",
    "text": "Disclaimer\n\nAny opinions expressed in this presentation and on the following slides are solely those of the presenter and not necessarily those of their employers."
  },
  {
    "objectID": "slides/04_collaboration.html#section",
    "href": "slides/04_collaboration.html#section",
    "title": "4 Version Control and Collaboration",
    "section": "",
    "text": "Overview, demo, practical\nCan only scratch surface\nMore resources on the course website\n\n\n\nPhoto by Rich @ rhubbardstockfootage on Unsplash"
  },
  {
    "objectID": "slides/04_collaboration.html#trade-offs-in-code-development",
    "href": "slides/04_collaboration.html#trade-offs-in-code-development",
    "title": "4 Version Control and Collaboration",
    "section": "Trade-offs in code development",
    "text": "Trade-offs in code development\n\n\n\nWorking alone:\n\nNo coordination overhead\nNo review\nLack of diversity\nCan slack on documentation\nFragile long-term maintenance\n\n\nWorking in a team:\n\nCoordination overhead\nMutual review of code\nDifferent approaches\nForced to document\nMore robust long-term maintenance"
  },
  {
    "objectID": "slides/04_collaboration.html#section-1",
    "href": "slides/04_collaboration.html#section-1",
    "title": "4 Version Control and Collaboration",
    "section": "",
    "text": "Key issue: Manage complexity over time or between people\n\n\nPhoto from Tim Mossholder on Unsplash"
  },
  {
    "objectID": "slides/04_collaboration.html#version-control-systems-vcs",
    "href": "slides/04_collaboration.html#version-control-systems-vcs",
    "title": "4 Version Control and Collaboration",
    "section": "Version control systems (VCS)",
    "text": "Version control systems (VCS)\n\nManage different versions of a piece of work\nCompare and merge diverged versions effectively1\n\n\n\n\n\n\nflowchart LR\n  A[Alessandro v1] --&gt; B[Alessandro v2]\n  B --&gt; C[Alessandro v3]\n  B --&gt; D[Audrey v1]\n  D --&gt; E[Audrey + Alessandro v4]\n  C --&gt; E\n\n\n\n\n\n\n\nCode is complex system \\(\\leadsto\\) ideal application of VCS\nCompounded by multiple people fiddling with it!\n\nMerging parallel edits is not simple: try merging multiple copies of the same document, each including feedback from your co-authors, using MS Word…"
  },
  {
    "objectID": "slides/04_collaboration.html#enter-git",
    "href": "slides/04_collaboration.html#enter-git",
    "title": "4 Version Control and Collaboration",
    "section": "Enter git ",
    "text": "Enter git \n\n\n\n\n\nCreated by Linus Torvalds in 2005, for work on Linux kernel\nEssentially a database with snapshots of a monitored repository (directory)\nOptimized to compute line-based changes\nIntegrated in RStudio IDE, Visual Studio Code\nDe facto standard, and not just in the R world\nAlternatives: mercurial, SVN, …\n\n\n\nPhoto by Lf Asia & the Archive Team CC BY 3.0"
  },
  {
    "objectID": "slides/04_collaboration.html#git-commands",
    "href": "slides/04_collaboration.html#git-commands",
    "title": "4 Version Control and Collaboration",
    "section": "Git commands",
    "text": "Git commands\n\ngit commands are composed of three parts:\n\ngit verb options\ngit invokes Git\nverb is a placeholder for the different actions (such as branch or commit, more on that later)\noptions is a placeholder for any option possibly required by a certain verb (not always required)\n\nHint: git help is your friend!"
  },
  {
    "objectID": "slides/04_collaboration.html#stage-and-commit",
    "href": "slides/04_collaboration.html#stage-and-commit",
    "title": "4 Version Control and Collaboration",
    "section": "Stage and commit",
    "text": "Stage and commit\n\n\n\n\n\n\n\n\n\ngitGraph\n   commit\n   commit\n   commit\n   commit\n   commit\n\n\n\n\n\n\n\nStage changes for inspection\n\nallows to inspect proposed changes before locking them in\n\nPermanently commit changes to git to add them to the project history\n\n\\(\\leadsto\\) Chain of versions with incremental changes\n\n\nPhoto by Felicia Montenegro on Unsplash"
  },
  {
    "objectID": "slides/04_collaboration.html#line-based-differences---the-diff",
    "href": "slides/04_collaboration.html#line-based-differences---the-diff",
    "title": "4 Version Control and Collaboration",
    "section": "Line-based differences - the diff",
    "text": "Line-based differences - the diff\n\n\nChanges in git are line-based\nAdditions (green) and deletions (red) between commits are highlighted"
  },
  {
    "objectID": "slides/04_collaboration.html#going-back-in-time",
    "href": "slides/04_collaboration.html#going-back-in-time",
    "title": "4 Version Control and Collaboration",
    "section": "Going back in time",
    "text": "Going back in time\n\n\n\n\n\nEvery commit has a unique hash value\nCan checkout old commit (browse history)\n\ngit checkout [commit hash to browse]\n\nCan reset changes\n\ngit reset --hard [commit hash to reset to]\n\nRemoves need for my-file_final_v2_2019.R\nTime travelling has its dangers…1\n\n\n\nPhoto by Mila Tovar on Unsplash\n\nNever change published history! One of the cardinal rules of Git is that, since so much work is local within your clone, you have a great deal of freedom to rewrite your history locally. However, once you push your work, it is a different story entirely, and you should consider pushed work as final unless you have good reason to change it. In short, you should avoid pushing your work until you’re happy with it and ready to share it with the rest of the world."
  },
  {
    "objectID": "slides/04_collaboration.html#branching",
    "href": "slides/04_collaboration.html#branching",
    "title": "4 Version Control and Collaboration",
    "section": "Branching",
    "text": "Branching\n\n\n\n\n\n\n\n\n\ngitGraph\n   commit\n   commit\n   branch feature\n   checkout feature\n   commit\n   commit\n   checkout main\n   commit\n\n\n\n\n\n\n\nVariations of repository: branches\n\ngit branch [my new branch name]\n\nList current branches\n\ngit branch\n\nQuick switching between branches\n\ngit checkout [branch name]\n\n\nPhoto by Mila Tovar on Unsplash"
  },
  {
    "objectID": "slides/04_collaboration.html#merging-two-branches",
    "href": "slides/04_collaboration.html#merging-two-branches",
    "title": "4 Version Control and Collaboration",
    "section": "Merging two branches",
    "text": "Merging two branches\n\n\n\n\n\n\n\n\n\ngitGraph\n   commit\n   commit\n   branch feature\n   checkout feature\n   commit\n   commit\n   checkout main\n   commit\n   merge feature\n\n\n\n\n\n\n\nConsolidate diverged branches\nUsually merged automagically\nConflicting changes can be a headache to fix \nLine edited in source/target branch - keep which?\nResolving merge conflicts beyond today’s scope\n\n\n\nPhoto by Max LaRochelle on Unsplash"
  },
  {
    "objectID": "slides/04_collaboration.html#example-of-gitflow",
    "href": "slides/04_collaboration.html#example-of-gitflow",
    "title": "4 Version Control and Collaboration",
    "section": "Example of gitflow",
    "text": "Example of gitflow\n\n\n\n\n\ngitGraph\n   commit tag: \"v0.0.1\"\n   commit\n   branch feature-1\n   checkout feature-1\n   commit\n   commit\n   checkout main\n   branch feature-2\n   checkout feature-2\n   commit\n   checkout feature-1\n   commit\n   checkout main\n   commit tag: \"bugfix\"\n   merge feature-1 tag: \"v0.1.0\"\n   checkout feature-2\n   commit\n\n\n\n\n\n\n\ngitflow: specific workflow for git repositories\nfeatures developed on branches, then merged into the main one"
  },
  {
    "objectID": "slides/04_collaboration.html#version-control-and-collaboration",
    "href": "slides/04_collaboration.html#version-control-and-collaboration",
    "title": "4 Version Control and Collaboration",
    "section": "Version control and collaboration",
    "text": "Version control and collaboration\n\ngit itself is just a command line tool for version control\ngit platforms add UI for collaboration1\n\nGitHub.com de facto standard in R, but alternatives do exist (e.g., GitLab.com)\n\ngit + GitHub\n\nVCS (git)\nWeb hosting of code (GitHub)\nOrganisation with issues, discussions (GitHub)\nAutomation of checks/test (GitHub)\n\n\nAll platforms also available on-premise for enterprise use"
  },
  {
    "objectID": "slides/04_collaboration.html#github.com",
    "href": "slides/04_collaboration.html#github.com",
    "title": "4 Version Control and Collaboration",
    "section": "GitHub.com ",
    "text": "GitHub.com \n\nHuge number of R packages developed and hosted there:\n\nggplot2\ndplyr\npharmaverse\n…\n\n150 million developers and over 400 million repositories on GitHub.com as of June 2025\nSee the about GitHub page\n“Social media” for developers / social coding\nDiscuss problems, propose changes, publish code"
  },
  {
    "objectID": "slides/04_collaboration.html#branches-and-pull-requests",
    "href": "slides/04_collaboration.html#branches-and-pull-requests",
    "title": "4 Version Control and Collaboration",
    "section": "Branches and pull requests",
    "text": "Branches and pull requests\n\nBranches are a git concept\nGit platforms add the concept of pull request (PR)\n\nPR is a suggested merge from branch A to B\nUsually from feature A to main\n\nAllow to preview problems before merge and discuss changes\nOnce everyone is happy, a pull request1 can be merged\nEvery PR has an associated branch, but not every branch has a PR\nMore in the demo!\n\nTechnically, not a PR but its associated branch"
  },
  {
    "objectID": "slides/04_collaboration.html#automating-things-with-github",
    "href": "slides/04_collaboration.html#automating-things-with-github",
    "title": "4 Version Control and Collaboration",
    "section": "Automating things with GitHub",
    "text": "Automating things with GitHub\n\nGitHub provides\n\nCloud compute\nScripting framework (GitHub actions)\n\nAllows task automation, e.g.\n\nRun unit tests\nBuild & host documentation\nStatic code analysis (linting)\n\nMost important actions for R: github.com/r-lib/actions\nActions can be extremely useful to enforce best-practices and quality"
  },
  {
    "objectID": "slides/04_collaboration.html#a-typical-github-workflow",
    "href": "slides/04_collaboration.html#a-typical-github-workflow",
    "title": "4 Version Control and Collaboration",
    "section": "A typical GitHub workflow",
    "text": "A typical GitHub workflow\n\n\n\n\n\nsequenceDiagram\n    participant A as Alessandro\n    participant GH as GitHub server\n    participant B as Audrey\n    A-&gt;&gt;A: make change locally & commit to &lt;feature&gt;\n    A-&gt;&gt;GH: push commit\n    A-&gt;&gt;GH: open pull request\n    GH-&gt;&gt;GH: run automated checks\n    A-&gt;&gt;B: request review\n    B-&gt;&gt;B: review code\n    B-&gt;&gt;A: request changes\n    A-&gt;&gt;A: implement changes locally & commit\n    A-&gt;&gt;GH: push commit\n    GH-&gt;&gt;GH: run automated checks\n    A-&gt;&gt;B: request review\n    B-&gt;&gt;B: review code\n    B-&gt;&gt;GH: approve changes, unblocking merge\n    A-&gt;&gt;GH: merge &lt;feature&gt; into &lt;main&gt;\n    GH-&gt;&gt;GH: run automated checks on &lt;main&gt;\n    B-&gt;&gt;GH: pull newest version of &lt;main&gt;"
  },
  {
    "objectID": "slides/04_collaboration.html#looks-awfully-complicated-why",
    "href": "slides/04_collaboration.html#looks-awfully-complicated-why",
    "title": "4 Version Control and Collaboration",
    "section": "Looks awfully complicated, why?",
    "text": "Looks awfully complicated, why?\n\nEfficient collaboration with novice/untrusted contributors\n\nMaintainer: automated checks reduce review burden\nContributor: no need to check manually\n\nBranching promotes asynchronous work on features\nFull history of the project is preserved - you can always go back\n\n\\(\\leadsto\\) Making collaboration on code scalable"
  },
  {
    "objectID": "slides/04_collaboration.html#demo",
    "href": "slides/04_collaboration.html#demo",
    "title": "4 Version Control and Collaboration",
    "section": "Demo",
    "text": "Demo\n\nThanks to Audrey for helping me in this demo!\nHow do we publish a repository on GitHub?\nHow do we add a collaborator on GitHub?\nHow does a pull request work?\n\n\n\nThese are the first steps for setting up the next practical.\nDon’t panic if it looks confusing - we are going to help you to get this going."
  },
  {
    "objectID": "slides/04_collaboration.html#practical---collaboration-on-github",
    "href": "slides/04_collaboration.html#practical---collaboration-on-github",
    "title": "4 Version Control and Collaboration",
    "section": "Practical - collaboration on GitHub",
    "text": "Practical - collaboration on GitHub\n\nWork in teams of 3 or 4\nOne member of the group can publish the project that we worked on in the previous practicals on their GitHub page\nThe same member can then invite the other members as collaborators\nEvery member can now:\n\nReview the project\nCreate a new branch\nPropose some edits by opening a PR\n\nThe purpose of this exercise is to explore the collaboration functionality of GitHub - not to produce a perfect package"
  },
  {
    "objectID": "slides/06_conclusion.html#disclaimer",
    "href": "slides/06_conclusion.html#disclaimer",
    "title": "6 Conclusion",
    "section": "Disclaimer",
    "text": "Disclaimer\n\nAny opinions expressed in this presentation and on the following slides are solely those of the presenter and not necessarily those of their employers."
  },
  {
    "objectID": "slides/06_conclusion.html#thank-you",
    "href": "slides/06_conclusion.html#thank-you",
    "title": "6 Conclusion",
    "section": "Thank you …",
    "text": "Thank you …\n\n\n\n\n\nto you for your engagement and participation 🙏\nto the ISCB organizers to make this event possible 👏\nto our fellow openstatsware authors of the course materials 📚"
  },
  {
    "objectID": "slides/06_conclusion.html#enter-slido.com-2189872",
    "href": "slides/06_conclusion.html#enter-slido.com-2189872",
    "title": "6 Conclusion",
    "section": "Enter slido.com: 2189872",
    "text": "Enter slido.com: 2189872"
  },
  {
    "objectID": "slides/06_conclusion.html#r-package-structure",
    "href": "slides/06_conclusion.html#r-package-structure",
    "title": "6 Conclusion",
    "section": "R package structure",
    "text": "R package structure\n\nR package = folder structure with (many) conventions\nWith modern tools usethis, roxygen2 it is easy to start a new package\nPackaging a set of functions is an ideal way to share with collaborators and the public\nStart small and simple and over time you can learn additional options"
  },
  {
    "objectID": "slides/06_conclusion.html#ensuring-quality",
    "href": "slides/06_conclusion.html#ensuring-quality",
    "title": "6 Conclusion",
    "section": "Ensuring quality",
    "text": "Ensuring quality\n\nQuality by Design: use a workable workflow:\nIdea \\(\\rightarrow\\) Design docs \\(\\rightarrow\\) Programming \\(\\rightarrow\\) Quality check \\(\\rightarrow\\) Publication\nApply common clean code rules:\n\nUse clear names for functions and variables\nDon’t repeat yourself!\nUse styler to optimize the code styling\n\nWrite tests for your functions\n\nUse testthat to test, test, and test\nUse covr to improve the test coverage"
  },
  {
    "objectID": "slides/06_conclusion.html#collaboration",
    "href": "slides/06_conclusion.html#collaboration",
    "title": "6 Conclusion",
    "section": "Collaboration",
    "text": "Collaboration\n\nVersion control is key\n\nMultiple people working on code without strong VC \\(\\leadsto\\) disaster!\nThere are different options, but git is the defacto standard for R packages\nGit needs a friend - use platforms like GitHub or GitLab\n\nAutomated CI/CD allows for much quicker iteration\n\nAutomate tests to avoid bugs slipping back in\n\nTechnology does not solve everything - foster a positive culture\n\nKeep internal and external contributors engaged\nInvest in documentation to make it easier to contribute"
  },
  {
    "objectID": "slides/06_conclusion.html#publication",
    "href": "slides/06_conclusion.html#publication",
    "title": "6 Conclusion",
    "section": "Publication",
    "text": "Publication\n\npkgdown can help you easily create a nice website for your package\nVersions and licenses along with NEWS updates are important\nGitHub helps with tagging of release versions\nR-Hub helps with checking before CRAN submission"
  },
  {
    "objectID": "slides/06_conclusion.html#possible-next-steps",
    "href": "slides/06_conclusion.html#possible-next-steps",
    "title": "6 Conclusion",
    "section": "Possible next steps",
    "text": "Possible next steps\n\nBring the information back to your colleagues in your organization\nStart building your first own package and share internally first\nLater publish it open source on GitHub and submit it to CRAN\nLearn about more tips and tricks how to extend R\n\n\nPhoto by Pixabay on pexels.com"
  },
  {
    "objectID": "slides/03_quality.html#disclaimer",
    "href": "slides/03_quality.html#disclaimer",
    "title": "3 Ensuring Quality",
    "section": "Disclaimer",
    "text": "Disclaimer\n\nAny opinions expressed in this presentation and on the following slides are solely those of the presenter and not necessarily those of their employers."
  },
  {
    "objectID": "slides/03_quality.html#example---step-1-idea",
    "href": "slides/03_quality.html#example---step-1-idea",
    "title": "3 Ensuring Quality",
    "section": "Example - step 1: idea",
    "text": "Example - step 1: idea\nLet’s assume that you used some lines of code to create simulated data in multiple projects:\n\ndat &lt;- data.frame(\n    group = c(rep(1, 50), rep(2, 50)),\n    values = c(\n        rnorm(n = 50, mean = 8, sd = 12),\n        rnorm(n = 50, mean = 14, sd = 11)\n    )\n)\n\nIdea: put the code into a package"
  },
  {
    "objectID": "slides/03_quality.html#example---step-2-design-docs",
    "href": "slides/03_quality.html#example---step-2-design-docs",
    "title": "3 Ensuring Quality",
    "section": "Example - step 2: design docs",
    "text": "Example - step 2: design docs\n\nDescribe the purpose and scope of the package\nAnalyse and describe the requirements in clear and simple terms (“prose”)\n\n\n\n\nObligation level\nKey word1\nDescription\n\n\n\n\nDuty\nmust2\n“must have”\n\n\nDesire\nshould\n“nice to have”\n\n\nIntention\nmay\n“optional”\n\n\n\n\nCreate prototype code (if not already done)\n\nRupp, C., & SOPHISTen, die. (2009). Requirements-Engineering und -Management: Professionelle, iterative Anforderungsanalyse für die Praxis (5. Ed.). Carl Hanser Verlag GmbH & Co. KG.Shall and must - plainlanguage.gov"
  },
  {
    "objectID": "slides/03_quality.html#example---step-2-design-docs-1",
    "href": "slides/03_quality.html#example---step-2-design-docs-1",
    "title": "3 Ensuring Quality",
    "section": "Example - step 2: design docs",
    "text": "Example - step 2: design docs\nPurpose and Scope\nThe R package simulatr is intended to enable the creation of reproducible fake data.\nPackage Requirements\nsimulatr must provide a function to generate normal distributed random data for two independent groups. The function must allow flexible definition of sample size per group, mean per group, standard deviation per group. The reproducibility of the simulated data must be ensured via an optional seed. It should be possible to print the function result. The package may also facilitate graphical presentation of the simulated data."
  },
  {
    "objectID": "slides/03_quality.html#example---step-2-design-docs-2",
    "href": "slides/03_quality.html#example---step-2-design-docs-2",
    "title": "3 Ensuring Quality",
    "section": "Example - step 2: design docs",
    "text": "Example - step 2: design docs\n\n\nUseful formats / tools for design docs:\n\nR Markdown1 (*.Rmd)\nQuarto1 (*.qmd)\nOverleaf2\ndraw.io3\n\n\n\nUML Diagram\n\n\n\n\n\n\n\nBased on Markdown, the easy-to-use markup languageThe easy to use, online, collaborative LaTeX editorA picture is worth a thousand words"
  },
  {
    "objectID": "slides/03_quality.html#example---step-3-packaging",
    "href": "slides/03_quality.html#example---step-3-packaging",
    "title": "3 Ensuring Quality",
    "section": "Example - step 3: packaging",
    "text": "Example - step 3: packaging\nR package programming\n\nCreate basic package project (see previous section)\nC&P existing R scripts (one-off scripts, prototype functions) and apply clean code rules (see next section!)\nCreate R generic functions\nDocument all functions"
  },
  {
    "objectID": "slides/03_quality.html#why-is-clean-code-important",
    "href": "slides/03_quality.html#why-is-clean-code-important",
    "title": "3 Ensuring Quality",
    "section": "Why is clean code important?",
    "text": "Why is clean code important?\n\nMaintainability: The code is readable and understandable and has a reduced complexity, i.e., it’s easier to fix bugs\nExtensibility: The architecture is simpler, cleaner, and more expressive, i.e., it’s easier to extend the capabilities and the risk of introducing bugs is reduced\nPerformance: The code often runs faster, uses less memory, or is easier to optimize"
  },
  {
    "objectID": "slides/03_quality.html#example-clean-code-rules---step-by-step",
    "href": "slides/03_quality.html#example-clean-code-rules---step-by-step",
    "title": "3 Ensuring Quality",
    "section": "Example: clean code rules - step by step",
    "text": "Example: clean code rules - step by step\nThis script breaks all common clean code rules:\n\n# fmt: skip\ny=function(x){\n  s1=0\n  for(v1 in x){s1=s1+v1}\n  m1=s1/length(x)\n  i=ceiling(length(x)/2)\n  if(length(x) %% 2 == 0){i=c(i,i+1)}\n  s2=0\n  for(v2 in i){s2=s2+x[v2]}\n  m2=s2/length(i)\n  c(m1,m2)\n}\ny(c(1:7, 100))\n\n[1] 16.0  4.5\n\n\n\nWe now refactor it by applying clean code rules…"
  },
  {
    "objectID": "slides/03_quality.html#example-ccr1",
    "href": "slides/03_quality.html#example-ccr1",
    "title": "3 Ensuring Quality",
    "section": "Example: CCR#1",
    "text": "Example: CCR#1\n\n\n\n# fmt: skip\ny=function(x){\n  s1=0\n  for(v1 in x){s1=s1+v1}\n  m1=s1/length(x)\n  i=ceiling(length(x)/2)\n  if(length(x) %% 2 == 0){i=c(i,i+1)}\n  s2=0\n  for(v2 in i){s2=s2+x[v2]}\n  m2=s2/length(i)\n  c(m1,m2)\n}\ny(c(1:7, 100))\n\n[1] 16.0  4.5\n\n\n\nCCR#1 Naming: Are the names of the variables, functions, and classes descriptive and meaningful?"
  },
  {
    "objectID": "slides/03_quality.html#example-ccr1-1",
    "href": "slides/03_quality.html#example-ccr1-1",
    "title": "3 Ensuring Quality",
    "section": "Example: CCR#1",
    "text": "Example: CCR#1\n\n# fmt: skip\ngetMeanAndMedian=function(x){\n    sum1=0\n    for(value in x){sum1=sum1+value}\n    meanValue=sum1/length(x)\n    centerIndices=ceiling(length(x)/2)\n    if(length(x) %% 2 == 0){\n        centerIndices=c(centerIndices,centerIndices+1)\n    }\n    sum2=0\n    for(centerIndex in centerIndices){sum2=sum2+x[centerIndex]}\n    medianValue=sum2/length(centerIndices)\n    c(meanValue,medianValue)\n}\n\nCCR#1 Naming \nCCR#2 Formatting: Are indentation, spacing, and bracketing consistent, i.e., is the code easy to read"
  },
  {
    "objectID": "slides/03_quality.html#example-ccr2",
    "href": "slides/03_quality.html#example-ccr2",
    "title": "3 Ensuring Quality",
    "section": "Example: CCR#2",
    "text": "Example: CCR#2\n\n\n\ngetMeanAndMedian &lt;- function(x) {\n    sum1 &lt;- 0\n    for (value in x) {\n        sum1 &lt;- sum1 + value\n    }\n    meanValue &lt;- sum1 / length(x)\n    centerIndices &lt;- ceiling(length(x) / 2)\n    if (length(x) %% 2 == 0) {\n        centerIndices &lt;- c(\n          centerIndices, centerIndices + 1)\n    }\n    sum2 &lt;- 0\n    for (centerIndex in centerIndices) {\n        sum2 &lt;- sum2 + x[centerIndex]\n    }\n    medianValue &lt;- sum2 / length(centerIndices)\n    c(meanValue, medianValue)\n}\n\n\nCCR#2 Formatting \nCCR#3 Simplicity: Did you keep the code as simple and straightforward as possible, i.e., did you avoid unnecessary complexity"
  },
  {
    "objectID": "slides/03_quality.html#example-ccr3",
    "href": "slides/03_quality.html#example-ccr3",
    "title": "3 Ensuring Quality",
    "section": "Example: CCR#3",
    "text": "Example: CCR#3\nNote:\n\nFrom the Simplicity rule also follows that large source files should be split into multiple files\nGeneral guideline: keeping the number of lines to less than 1,000 lines per file can help maintain code readability and manageability"
  },
  {
    "objectID": "slides/03_quality.html#example-ccr3-1",
    "href": "slides/03_quality.html#example-ccr3-1",
    "title": "3 Ensuring Quality",
    "section": "Example: CCR#3",
    "text": "Example: CCR#3\n\ngetMeanAndMedian &lt;- function(x) {\n    meanValue &lt;- sum(x) / length(x)\n    centerIndices &lt;- ceiling(length(x) / 2)\n    if (length(x) %% 2 == 0) {\n        centerIndices &lt;- c(centerIndices, centerIndices + 1)\n    }\n    medianValue &lt;- sum(x[centerIndices]) / length(centerIndices)\n    c(meanValue, medianValue)\n}\n\nCCR#3 Simplicity \nCCR#4 Single Responsibility Principle (SRP): does each function have only a single, well-defined purpose"
  },
  {
    "objectID": "slides/03_quality.html#example-ccr4",
    "href": "slides/03_quality.html#example-ccr4",
    "title": "3 Ensuring Quality",
    "section": "Example: CCR#4",
    "text": "Example: CCR#4\n\ngetMean &lt;- function(x) {\n    sum(x) / length(x)\n}\n\nisLengthAnEvenNumber &lt;- function(x) {\n    length(x) %% 2 == 0\n}\n\ngetMedian &lt;- function(x) {\n    centerIndices &lt;- ceiling(length(x) / 2)\n    if (isLengthAnEvenNumber(x)) {\n        centerIndices &lt;- c(centerIndices, centerIndices + 1)\n    }\n    sum(x[centerIndices]) / length(centerIndices)\n}\n\nCCR#4 Single Responsibility Principle (SRP) \nCCR#5 Don’t Repeat Yourself (DRY): Did you avoid duplication of code, either by reusing existing code or creating functions"
  },
  {
    "objectID": "slides/03_quality.html#example-ccr5",
    "href": "slides/03_quality.html#example-ccr5",
    "title": "3 Ensuring Quality",
    "section": "Example: CCR#5",
    "text": "Example: CCR#5\n\nCCR#5: DRY\n\nSuppose you have a code block that performs the same calculation multiple times:\n\nresult1 &lt;- 2 * 3 + 4\nresult2 &lt;- 2 * 5 + 4\nresult3 &lt;- 2 * 7 + 4\n\nCreate a function to encapsulate this calculation and reuse it multiple times:\n\ncalculate &lt;- function(x) {\n  2 * x + 4\n}\n\nresult1 &lt;- calculate(3)\nresult2 &lt;- calculate(5)\nresult3 &lt;- calculate(7)"
  },
  {
    "objectID": "slides/03_quality.html#example-ccr5-1",
    "href": "slides/03_quality.html#example-ccr5-1",
    "title": "3 Ensuring Quality",
    "section": "Example: CCR#5",
    "text": "Example: CCR#5\n\ngetMean &lt;- function(x) {\n    sum(x) / length(x)\n}\n\nisLengthAnEvenNumber &lt;- function(x) {\n    length(x) %% 2 == 0\n}\n\ngetMedian &lt;- function(x) {\n    centerIndices &lt;- ceiling(length(x) / 2)\n    if (isLengthAnEvenNumber(x)) {\n        centerIndices &lt;- c(centerIndices, centerIndices + 1)\n    }\n    getMean(x[centerIndices])\n}\n\nCCR#5 Don’t Repeat Yourself (DRY) \nCCR#6 Comments: Did you use comments to explain the purpose of code blocks and to clarify complex logic"
  },
  {
    "objectID": "slides/03_quality.html#example-ccr6",
    "href": "slides/03_quality.html#example-ccr6",
    "title": "3 Ensuring Quality",
    "section": "Example: CCR#6",
    "text": "Example: CCR#6\n\n\n\n# returns the mean of x\ngetMean &lt;- function(x) {\n    sum(x) / length(x)\n}\n\n# returns TRUE if the length of x is\n# an even number; FALSE otherwise\nisLengthAnEvenNumber &lt;- function(x) {\n    length(x) %% 2 == 0\n}\n\n# returns the median of x\ngetMedian &lt;- function(x) {\n    centerIndices &lt;- ceiling(length(x) / 2)\n    if (isLengthAnEvenNumber(x)) {\n        centerIndices &lt;- c(centerIndices,\n             centerIndices + 1)\n    }\n    getMean(x[centerIndices])\n}\n\n\nCCR#6 Comments \nCCR#7 Error Handling: Did you include error handling code to gracefully handle exceptions and unexpected situations \n\ngetMean(c(\"a\", \"b\", \"c\"))\n\nError in sum(x) : invalid ‘type’ (character) of argument"
  },
  {
    "objectID": "slides/03_quality.html#example-ccr7",
    "href": "slides/03_quality.html#example-ccr7",
    "title": "3 Ensuring Quality",
    "section": "Example: CCR#7",
    "text": "Example: CCR#7\n\n#' returns the mean of x\ngetMean &lt;- function(x) {\n    checkmate::assertNumeric(x)\n    sum(x) / length(x)\n}\n#' returns TRUE if the length of x is an even number; FALSE otherwise\nisLengthAnEvenNumber &lt;- function(x) {\n    checkmate::assertVector(x)\n    length(x) %% 2 == 0\n}\n#' returns the median of x\ngetMedian &lt;- function(x) {\n    checkmate::assertNumeric(x)\n    centerIndices &lt;- ceiling(length(x) / 2)\n    if (isLengthAnEvenNumber(x)) {\n        centerIndices &lt;- c(centerIndices, centerIndices + 1)\n    }\n    getMean(x[centerIndices])\n}\n\nCCR#7 Error Handling"
  },
  {
    "objectID": "slides/03_quality.html#summary-of-clean-code-rules",
    "href": "slides/03_quality.html#summary-of-clean-code-rules",
    "title": "3 Ensuring Quality",
    "section": "Summary of clean code rules",
    "text": "Summary of clean code rules\n\nNaming: Use descriptive and meaningful names for variables, functions, and classes\nFormatting: Adhere to consistent indentation, spacing, and bracketing to make the code easy to read\nSimplicity: Keep the code as simple and straightforward as possible, avoiding unnecessary complexity\nSingle Responsibility Principle (SRP): Each function should have a single, well-defined purpose\nDon’t Repeat Yourself (DRY): Avoid duplication of code, either by reusing existing code or creating functions"
  },
  {
    "objectID": "slides/03_quality.html#summary-of-clean-code-rules-1",
    "href": "slides/03_quality.html#summary-of-clean-code-rules-1",
    "title": "3 Ensuring Quality",
    "section": "Summary of clean code rules",
    "text": "Summary of clean code rules\n\nComments: Use comments to explain the purpose of code blocks and to clarify complex logic\nError Handling: Include error handling code to gracefully handle exceptions and unexpected situations\n Test-Driven Development (TDD): Write tests for your code to ensure it behaves as expected and to catch bugs early\nRefactoring: Regularly refactor your code to keep it clean, readable, and maintainable\n Code Review: Have other team members review your code to catch potential issues and improve its quality"
  },
  {
    "objectID": "slides/03_quality.html#how-to-apply-clean-code-rules",
    "href": "slides/03_quality.html#how-to-apply-clean-code-rules",
    "title": "3 Ensuring Quality",
    "section": "How to apply clean code rules?",
    "text": "How to apply clean code rules?\nRecommended quality workflow for R packages:\n\nFollow the naming and styling guidelines (#1, #2)\nContinuously write tests and optimize the code coverage with help of tools (#7, #8)\nDocument the package and functions (#6)\nRegularly refactor your code (#1 - #7, #9)\nPublish your code on GitHub and invite colleagues to contribute (#10)"
  },
  {
    "objectID": "slides/03_quality.html#verification-vs-validation",
    "href": "slides/03_quality.html#verification-vs-validation",
    "title": "3 Ensuring Quality",
    "section": "Verification vs validation",
    "text": "Verification vs validation\n\n\nVerification:\nAre we building the product right?\n\nThe product meets a set of specified requirements\nActivities: reviews, inspections, and testing\nGoal: ensure that the product has been designed and implemented correctly\n\n\nValidation:\nAre we building the right product?\n\nEvaluate the product during or at the end of the development process\nShow that the product meet the specified requirements\nGoal: confirm that the product is fit for its intended purpose\n\\(\\rightarrow\\) Refers back to the user’s needs"
  },
  {
    "objectID": "slides/03_quality.html#what-are-unit-tests",
    "href": "slides/03_quality.html#what-are-unit-tests",
    "title": "3 Ensuring Quality",
    "section": "What are unit tests?",
    "text": "What are unit tests?\n\nAutomated tests\nRecord the expected output of a function using code\nCheck individual units of code (functions or methods) for correctness\nTypically written by developers as part of the software development process\nTypically run automatically as part of a CI/CD pipeline\nCan be run before committing code changes"
  },
  {
    "objectID": "slides/03_quality.html#why-are-unit-tests-important",
    "href": "slides/03_quality.html#why-are-unit-tests-important",
    "title": "3 Ensuring Quality",
    "section": "Why are unit tests important?",
    "text": "Why are unit tests important?\n\nCCR#8: TDD\n\n\nHelp to ensure that individual units of code are working correctly\nEnsure that changes to the codebase do not break existing functionality\nExpress the desired behavior in a way that a human can understand\nHelp to identify and fix bugs early on in the development process\nSave time and resources by catching issues before they become more difficult and costly to fix\n\n\n\n\n\n\nUnit tests help to increase the reliability and maintainability of the code"
  },
  {
    "objectID": "slides/03_quality.html#what-other-important-test-types-exist",
    "href": "slides/03_quality.html#what-other-important-test-types-exist",
    "title": "3 Ensuring Quality",
    "section": "What other important test types exist?",
    "text": "What other important test types exist?\n\nIntegration Testing: Test if different functions or scripts work together as expected\nPerformance Testing: Analyze the performance of the implemented functions and check whether they meet the requirements (UR/UX)\nSnapshot Testing: Record the results in a separate human-readable file and compare it to the output during the test; useful for large/complex outputs and binary formats like plots"
  },
  {
    "objectID": "slides/03_quality.html#how-to-realize-testing-with-r",
    "href": "slides/03_quality.html#how-to-realize-testing-with-r",
    "title": "3 Ensuring Quality",
    "section": "How to realize testing with R?",
    "text": "How to realize testing with R?\nR package testthat\n\nPopular testing framework for R that is easy to learn and use\nUnit testing, integration testing, and snapshot testing supported\nAlso performance testing, e.g., with help of microbenchmark package\n\nExample: unit test passed\n\nlibrary(testthat)\nexpect_equal(getMean(c(1, 3, 2)), 2)\n\nExample: unit test failed\n\nexpect_equal(getMean(c(1, 3, 2, NA)), 2)\nexpect_equal(getMedian(c(1, 3, 2)), 2)\n\n\nError: getMean(c(1, 3, 2, NA)) not equal to 2. Error: getMedian(c(1, 3, 2)) not equal to 2."
  },
  {
    "objectID": "slides/03_quality.html#investigating-failed-tests",
    "href": "slides/03_quality.html#investigating-failed-tests",
    "title": "3 Ensuring Quality",
    "section": "Investigating failed tests",
    "text": "Investigating failed tests\n\n#' returns the mean of x\ngetMean &lt;- function(x, na.rm = TRUE) {\n    checkmate::assertNumeric(x)\n    sum(x, na.rm = na.rm) / length(x[!is.na(x)])\n}\n#' returns TRUE if the length of x is an even number; FALSE otherwise\nisLengthAnEvenNumber &lt;- function(x) {\n    checkmate::assertVector(x)\n    length(x[!is.na(x)]) %% 2 == 0\n}\n#' returns the median of x\ngetMedian &lt;- function(x, na.rm = TRUE) {\n    checkmate::assertNumeric(x)\n    centerIndices &lt;- ceiling(length(x[!is.na(x)]) / 2)\n    if (anyNA(x) & !na.rm){\n        centerIndices &lt;- NA_real_\n    } else if (isLengthAnEvenNumber(x)) {\n        centerIndices &lt;- c(centerIndices, centerIndices + 1)\n    }\n    getMean(sort(x)[centerIndices])\n}"
  },
  {
    "objectID": "slides/03_quality.html#re-evaluate-tests",
    "href": "slides/03_quality.html#re-evaluate-tests",
    "title": "3 Ensuring Quality",
    "section": "Re-evaluate tests",
    "text": "Re-evaluate tests\n\nexpect_equal(getMedian(c(1, 3, 2)), 2)\nexpect_equal(getMedian(c(1, 3, 2, NA), na.rm = FALSE), NA_real_)\nexpect_equal(getMean(c(1, 3, 2, NA)), 2)\nexpect_equal(getMean(c(1, 3, 2, NA), na.rm = FALSE), NA_real_)"
  },
  {
    "objectID": "slides/03_quality.html#testthat-comparisons-functions-12",
    "href": "slides/03_quality.html#testthat-comparisons-functions-12",
    "title": "3 Ensuring Quality",
    "section": "testthat comparisons functions (1/2)",
    "text": "testthat comparisons functions (1/2)\n\n\n\n\n\n\n\n\nFunction name\nDoes code…\n\n\n\n\nexpect_condition\nfulfill a condition?\n\n\nexpect_equal\nreturn the expected value?\n\n\nexpect_error\nthrow an error?\n\n\nexpect_false\nreturn ‘FALSE’?\n\n\nexpect_gt\nreturn a number greater than the expected value?\n\n\nexpect_gte\nreturn a number greater or equal than the expected value?\n\n\nexpect_identical\nreturn the expected value?\n\n\nexpect_invisible\nreturn a invisible object?\n\n\nexpect_length\nreturn a vector with the specified length?\n\n\nexpect_lt\nreturn a number less than the expected value?\n\n\nexpect_lte\nreturn a number less or equal than the expected value?\n\n\nexpect_mapequal\nreturn a vector containing the expected values?\n\n\nexpect_message\nshow a message?\n\n\nexpect_named\nreturn a vector with (given) names?"
  },
  {
    "objectID": "slides/03_quality.html#testthat-comparisons-functions-22",
    "href": "slides/03_quality.html#testthat-comparisons-functions-22",
    "title": "3 Ensuring Quality",
    "section": "testthat comparisons functions (2/2)",
    "text": "testthat comparisons functions (2/2)\n\n\n\n\n\n\n\n\nFunction name\nDoes code…\n\n\n\n\nexpect_no_condition\nrun without condition?\n\n\nexpect_no_error\nrun without error?\n\n\nexpect_no_message\nrun without message?\n\n\nexpect_no_warning\nrun without warning?\n\n\nexpect_output\nprint output to the console?\n\n\nexpect_s3_class\nreturn an object inheriting from the expected S3 class?\n\n\nexpect_s4_class\nreturn an object inheriting from the expected S4 class?\n\n\nexpect_setequal\nreturn a vector containing the expected values?\n\n\nexpect_silent\nexecute silently?\n\n\nexpect_true\nreturn ‘TRUE’?\n\n\nexpect_type\nreturn an object inheriting from the expected base type?\n\n\nexpect_vector\nreturn a vector with the expected size and/or prototype?\n\n\nexpect_visible\nreturn a visible object?\n\n\nexpect_warning\nthrow warning?"
  },
  {
    "objectID": "slides/03_quality.html#how-to-check-the-package-quality",
    "href": "slides/03_quality.html#how-to-check-the-package-quality",
    "title": "3 Ensuring Quality",
    "section": "How to check the package quality?",
    "text": "How to check the package quality?\n\npkgbuild: Tools needed to build R packages\nrcmdcheck: Run R CMD check from R and capture results\ndevtools: Tools to make developing R packages easier, e.g., check() automatically builds and checks a source package, using all known best practices"
  },
  {
    "objectID": "slides/03_quality.html#how-to-improve-the-test-coverage",
    "href": "slides/03_quality.html#how-to-improve-the-test-coverage",
    "title": "3 Ensuring Quality",
    "section": "How to improve the test coverage?",
    "text": "How to improve the test coverage?\ncovr: Track and report code coverage for your package\n\nlibrary(covr)\nx &lt;- package_coverage()\nreport(x)"
  },
  {
    "objectID": "slides/03_quality.html#example-on-test-coverage",
    "href": "slides/03_quality.html#example-on-test-coverage",
    "title": "3 Ensuring Quality",
    "section": "Example on test coverage",
    "text": "Example on test coverage\nLet’s assume we have added a generic function to cat a simulation result:\n\n#'\n#' @export\n#'\ncat.SimulationResult &lt;- function(... , file = \"\", sep = \" \",\n        fill = FALSE, labels = NULL, append = FALSE) {\n    args &lt;- list(...)\n}\n\n\nBut we forgot to finalize the implementation and didn’t create unit tests.\nRe-execution of\n\nreport(package_coverage())\n\nthen results in…"
  },
  {
    "objectID": "slides/03_quality.html#example-on-test-coverage-1",
    "href": "slides/03_quality.html#example-on-test-coverage-1",
    "title": "3 Ensuring Quality",
    "section": "Example on test coverage",
    "text": "Example on test coverage"
  },
  {
    "objectID": "slides/03_quality.html#example-on-test-coverage-2",
    "href": "slides/03_quality.html#example-on-test-coverage-2",
    "title": "3 Ensuring Quality",
    "section": "Example on test coverage",
    "text": "Example on test coverage\nWe can go into the details by clicking on a file name:"
  },
  {
    "objectID": "slides/03_quality.html#why-is-code-style-important",
    "href": "slides/03_quality.html#why-is-code-style-important",
    "title": "3 Ensuring Quality",
    "section": "Why is code style important?",
    "text": "Why is code style important?\n\nCCR#2: Formatting\n\n\nMake the code more readable, maintainable, and consistent\nMake it easier for others to understand and contribute to the codebase\nAdhering to a consistent code style can reduce the number of errors and make debugging simpler\n“Good coding style is like correct punctuation: you can manage without it, butitsuremakesthingseasiertoread.” (The tidyverse style guide)"
  },
  {
    "objectID": "slides/03_quality.html#how-to-optimize-the-code-styling",
    "href": "slides/03_quality.html#how-to-optimize-the-code-styling",
    "title": "3 Ensuring Quality",
    "section": "How to optimize the code styling?",
    "text": "How to optimize the code styling?\nTwo popular R packages support the tidyverse style guide:\n\nstyler: interactively restyle selected text, files, or entire projects:\n\nstyle_text\nstyle_file\nstyle_pkg\n\nlintr: perform automated checks to confirm that you conform to the style guide\nair : an R formatter that ensures whitespace, newlines, punctuation conform to a set of rules and standards\n\nThe devtools function spell_check runs a spell check on text fields in the package description file, manual pages, and optionally vignettes."
  },
  {
    "objectID": "slides/03_quality.html#code-styler-in-rstudio",
    "href": "slides/03_quality.html#code-styler-in-rstudio",
    "title": "3 Ensuring Quality",
    "section": "Code styler in RStudio",
    "text": "Code styler in RStudio\nHow to link the styler1 package to a keyboard shortcut:\n\nBrowse addinsSet keyboard shortcut\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf not available, install it first"
  },
  {
    "objectID": "slides/03_quality.html#please-install-the-following-packages-before-we-moving-on",
    "href": "slides/03_quality.html#please-install-the-following-packages-before-we-moving-on",
    "title": "3 Ensuring Quality",
    "section": "Please install the following packages before we moving on",
    "text": "Please install the following packages before we moving on\ninstall.packages(c(\"DT\", \"htmltools\",\n  \"testthat\", \"rlang\", \"checkmate\", \"covr\", \"styler\", \"devtools\"))"
  },
  {
    "objectID": "slides/03_quality.html#tasks",
    "href": "slides/03_quality.html#tasks",
    "title": "3 Ensuring Quality",
    "section": "Tasks",
    "text": "Tasks\n\nTask 1Task 2Task 3Task 4\n\n\nTake your package project and refactor it, i.e., apply the linked clean code rules:\n\nOptimize naming manually (CCR#1)\nUse the styler package to optimize the formatting (CCR#2)\nCheck and correct where appropriate:\n\nSimplicity (CCR#3)\nSingle Responsibility Principle (CCR#4)\nDon’t Repeat Yourself (CCR#5)\n\n\n\n\n\nAdd comments to explain the purpose of code blocks (CCR#6)\n\nIf it concerns exported functions use Roxygen2 notation\n\nCheck correct spelling with the devtools function spell_check()\n\n\n\nApply CCR#8 to your package project:\n\nAdd unit tests\nOptimize your test coverage with help of the covr functions package_coverage and report\n\n\n\nCheck if your package is ready for release with the devtools function check()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Good Software Engineering Practice for R Packages",
    "section": "",
    "text": "Welcome to the homepage of the short course “Good Software Engineering Practice for R Packages”, a pre-conference course for the 46th Annual Conference of the International Society for Clinical Biostatistics (ISCB). In this course you will learn hands-on skills and tools to engineer reliable R packages used in statistics. The short course will be conducted in a full day and will be a mix of presentations and exercises. Participants need to be comfortable with writing functions in R and use their own laptops as a prerequisite."
  },
  {
    "objectID": "index.html#event-details",
    "href": "index.html#event-details",
    "title": "Good Software Engineering Practice for R Packages",
    "section": "Event Details",
    "text": "Event Details\nThe event will be held on Sunday, 24th of August 2025 as an in-person workshop at the Biozentrum of the University of Basel, in room Biozentrum U1.101. Please refer to the conference agenda for more details.\nThe instructors for this workshop will be Audrey T. Yeo, Alessandro Gasparini and Daniel Sabanés Bové. You can learn more about them in the introduction section."
  },
  {
    "objectID": "index.html#workshop-program",
    "href": "index.html#workshop-program",
    "title": "Good Software Engineering Practice for R Packages",
    "section": "Workshop Program",
    "text": "Workshop Program\n\n\n\n\n\n9.00 - 9.15\nIntroduction and outline\n\n\n9.15 - 10.00\nR package syntax\n\n\n10.00 - 10.30\nExercise\n\n\n10.30 - 11.00\nCoffee break\n\n\n11.00 - 11.45\nPackage quality\n\n\n11.45 - 12.30\nExercise\n\n\n12.30 - 13.30\nLunch break\n\n\n13.30 - 14.15\nCollaboration via GitHub\n\n\n14.15 - 15.00\nExercise\n\n\n15.00 - 15.30\nCoffee break\n\n\n15.30 - 16.15\nPublication of R packages\n\n\n16.15 - 16.45\nExercise\n\n\n16.45 - 17.00\nSummary and Q&A"
  },
  {
    "objectID": "index.html#prerequisites-technical-setup",
    "href": "index.html#prerequisites-technical-setup",
    "title": "Good Software Engineering Practice for R Packages",
    "section": "Prerequisites & Technical Setup",
    "text": "Prerequisites & Technical Setup\nPrior to the short course, participants should\n\nSet up a (free) GitHub.com account.\n\nNote: There are other git platforms like Gitlab or Bitbucket, but we made the choice to go with GitHub.com for the course, since it is by far the most relevant git platform in the R community.\n\nInstall the latest R and RStudio software.\nInstall Rtools (on Windows) or the required tools (on macOS) to compile/build packages from source code.\nInstall additional R packages using the installation script.\n\nFor the course, participants are required to use their own laptop to be able to participate in the exercises.\n\nOptional Reading List\n\nExcellent and very comprehensive R Packages (2e)\n(Hardcore) description of how Writing R Extensions works\nGitHub ‘Hello World’ tutorial on how to use GitHub.com (does not require git command line knowledge)\nTutorial on version control with git and SVN (we will be using git)\nCommand line git mini intro trygit\nFirst steps with git & github by RStudio\nRStudio cheatsheets/ Git & GitHub\nExcuse Me, Do You Have a Moment to Talk About Version Control? by Jennifer Bryan\nVersion Control with Git course material by The Carpentries"
  },
  {
    "objectID": "index.html#material-from-past-events",
    "href": "index.html#material-from-past-events",
    "title": "Good Software Engineering Practice for R Packages",
    "section": "Material from Past Events",
    "text": "Material from Past Events\n\n8th April 2025, Tokyo, JP\n8th July 2024, Salzburg, AT\n18th and 19th April 2024, Zurich, CH\n16th and 17th October 2023, Montreal, QC, CA\n26th September 2023, Rockville, MD, US\n20th July 2023, San José, CA, US\n24th March 2023, Shanghai, CN\n10th February 2023, Basel, CH"
  }
]